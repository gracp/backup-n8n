{
  "active": false,
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Wait 1s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 1s": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Keyword": {
      "main": [
        [
          {
            "node": "Generate A-Z Queries",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Extract Keywords",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Autocomplete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Keywords": {
      "main": [
        [
          {
            "node": "Return Keywords",
            "type": "main",
            "index": 0
          },
          {
            "node": "NocoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Autocomplete": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate A-Z Queries": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-19T21:42:38.688Z",
  "id": "XwMK5m27Cgm5uTV6",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "SCRAPE > Google Autocomplete",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const keyword = $input.first().json.chatInput;\nconst alphabet = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\nreturn alphabet.map(letter => ({\n  json: { query: `${keyword} ${letter}` }\n}));"
      },
      "id": "0110802f-9fda-4d07-b6ae-45854b3dc394",
      "name": "Generate A-Z Queries",
      "type": "n8n-nodes-base.code",
      "position": [
        -560,
        360
      ],
      "notesInFlow": false,
      "typeVersion": 2,
      "notes": "This code adds \n- a blank space\n- and a letter, starting from a, b, c... up to z\nIt processes all the 26 possible letters.\n\nEx :\nn8n a\nn8n b\nn8n c\n...\nn8n z"
    },
    {
      "parameters": {
        "url": "=https://suggestqueries.google.com/complete/search?client=firefox&hl=en&oe=utf-8&q={{ $json.query }}",
        "options": {}
      },
      "id": "b0566c7b-d908-44c0-8f2b-ae40937363df",
      "name": "Google Autocomplete",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -180,
        460
      ],
      "typeVersion": 4
    },
    {
      "parameters": {
        "batchSize": 10,
        "options": {}
      },
      "id": "fae677fe-444b-4d65-9cea-b1c04b5e543e",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -380,
        360
      ],
      "typeVersion": 3,
      "notes": "The 26 items (one for each alphabet letter) are treated by batches of 10.\nThis setting + the wait time help not to be blocked by Google's API."
    },
    {
      "parameters": {
        "unit": "seconds"
      },
      "id": "9e913517-b5c8-456e-8801-e39893e6a1b6",
      "name": "Wait 1s",
      "type": "n8n-nodes-base.wait",
      "position": [
        180,
        460
      ],
      "webhookId": "844dc802-f7d5-47f0-a389-ad60c4970aa0",
      "typeVersion": 1,
      "notes": "This wait time is necessary, otherwise Google API might block the call and make an error."
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = JSON.parse($json.data);\nreturn {\n  json: {\n    keywords: data[1]\n  }\n};\n"
      },
      "id": "eb6bab0e-210b-4869-98a3-6646714d420a",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        0,
        460
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Type a Keyword and Discover What People Search on Google\n\nThis workflow scrapes Google autocomplete results by combining **your keyword** with every letter from **A to Z**.\n\n**Example:**  \nKeyword: `n8n`  \nResults:  \n- n8n agent  \n- n8n automation  \n- n8n api  \n- ...and so on\n",
        "height": 320,
        "width": 400
      },
      "id": "2e9b7c60-9c86-4418-a471-e9f7a13455d0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -780,
        20
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d8d8bb10-e85a-48e1-a6a4-73333f96cfbb",
      "name": "Get Keyword",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        -740,
        360
      ],
      "webhookId": "add903d6-ee86-435a-b876-12b2f6264631",
      "notesInFlow": false,
      "typeVersion": 1.1,
      "notes": "You could also get this initial keyword from :\n- a line in a Google Sheet\n- a webhook and a form on a website\n- a messaging app like Telegram or Whatsapp"
    },
    {
      "parameters": {
        "content": "## Exporting the Keywords\n\nYou can easily add a node to export the keywords in various ways:\n\n- via a webhook\n- by email\n- as a file (e.g., saved to Google Drive)\n- directly to a website",
        "height": 240,
        "width": 480
      },
      "id": "6366fabe-5c6f-4406-b76e-421ae695077e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -20,
        -80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "let mergedKeywords = [];\n\nfor (const item of $input.all()) {\n  mergedKeywords.push(...item.json.keywords);\n}\n\nreturn { json: { keywords: mergedKeywords } };\n"
      },
      "id": "96024e98-9d79-4271-8b26-2ec5d73a8cbb",
      "name": "Extract Keywords",
      "type": "n8n-nodes-base.code",
      "position": [
        -180,
        260
      ],
      "typeVersion": 2,
      "notes": "This code gathers all the keywords in one list."
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "729977f4-7ca4-421e-a2a0-2631f784e751",
      "name": "Return Keywords",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        0,
        180
      ],
      "typeVersion": 1,
      "notes": "Use this node"
    },
    {
      "parameters": {
        "content": "## Adapt the Language\n\nAutocomplete results depend on the selected language.\n\nYou can change the `&hl=en` parameter in the **Google Autocomplete** node.  \nReplace the `\"en\"` part with the language code of your choice.\n\n**Examples:**  \n- `&hl=fr` → French  \n- `&hl=es` → Spanish  \n- `&hl=de` → German\n",
        "height": 280,
        "width": 560
      },
      "id": "fa68b7f8-5cfd-4d76-aa7b-310300399c9d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "p8snhj21de1qbk2",
        "table": "mzf11sti36xobkx"
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        80,
        320
      ],
      "id": "01f525d4-10ea-434f-8e5b-68b758dec48b",
      "name": "NocoDB",
      "credentials": {
        "nocoDbApiToken": {
          "id": "DLSzBVbqDgz7lcWq",
          "name": "NocoDB Token account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "backup-n8n",
  "repo_owner": "gracp",
  "repo_path": "backups",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-19T21:42:37.884Z",
      "updatedAt": "2025-05-19T21:42:37.884Z",
      "id": "CeCUrmpSPIa8weeV",
      "name": "keyword research"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-19T23:09:53.428Z",
  "versionId": "0afb9363-b06f-488e-b123-6937dab0ba6a"
}